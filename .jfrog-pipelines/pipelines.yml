resources:
  - name: my_Git_Repository
    type: GitRepo
    configuration:
      gitProvider: Github
      path: cmoyamoradas/gs-spring-boot
      branches:
        include: main
  - name: my_Build_Info
    type: BuildInfo
    configuration:
      sourceArtifactory: Trickynickel
  - name: promoted_dev_Build_Info
    type: BuildInfo
    configuration:
      sourceArtifactory: Trickynickel
  - name: promoted_test_Build_Info
    type: BuildInfo
    configuration:
      sourceArtifactory: Trickynickel
  - name: promoted_stag_Build_Info
    type: BuildInfo
    configuration:
      sourceArtifactory: Trickynickel
  - name: promoted_prod_Build_Info
    type: BuildInfo
    configuration:
      sourceArtifactory: Trickynickel
pipelines:
  - name: GS_SPRING_BOOT_Docker
    steps:
      - name: build_app
        type: MvnBuild
        configuration:
          affinityGroup: docker_group
          integrations:
            - name: Trickynickel
          inputResources:
            - name: my_Git_Repository
          mvnCommand: clean install -Dcheckstyle.skip -DskipTests
          sourceLocation: complete
          resolverSnapshotRepo: demo-maven-virtual
          resolverReleaseRepo: demo-maven-virtual
          deployerSnapshotRepo: demo-maven-virtual
          deployerReleaseRepo: demo-maven-virtual
          autoPublishBuildInfo: false
        execution:
          onComplete:
            - ls -la workspace/run_state/jfrog/builds/R1NfU1BSSU5HX0JPT1RfRG9ja2VyXzEzX2FjbWU=
            - add_run_files complete/target app
      - name: build_image
        type: DockerBuild
        configuration:
          affinityGroup: docker_group
          dockerFileLocation: complete
          dockerFileName: Dockerfile
          dockerImageName: jfrog.trickynickel.org/gs_spring_boot
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg JAR_FILE=target/*.jar
          inputSteps:
            - name: build_app
          inputResources:
            - name: my_Git_Repository
          integrations:
            - name: Trickynickel
        execution:
          onStart:
            - restore_run_files app target
      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: docker_group
          targetRepository: acme-docker-dev-local
          integrations:
            - name: Trickynickel
          inputSteps:
            - name: build_image
      - name: publish_docker_build
        type: PublishBuildInfo
        configuration:
          affinityGroup: docker_group
          inputSteps:
            - name: docker_push
          outputResources:
            - name: my_Build_Info
      - name: Promotion_to_Dev
        type: PromoteBuild
        configuration:
          affinityGroup: docker_group
          targetRepository: acme-docker-dev-local
          status: Development
          inputSteps:
            - name: publish_docker_build
          inputResources:
            - name: my_Build_Info
          outputResources:
            - name: promoted_dev_Build_Info
  - name: Promotion_to_Test
    steps:
      - name: scan
        type: XrayScan
        configuration:
          priority: 1
          failOnScan: false
          inputResources:
            - name: promoted_dev_Build_Info
              trigger: false
      - name: Promotion_to_Test
        type: PromoteBuild
        configuration:
          priority: 2
          targetRepository: acme-docker-test-local
          status: Test
          inputSteps:
            - name: scan
          inputResources:
            - name: promoted_dev_Build_Info
              trigger: false
          outputResources:
            - name: promoted_test_Build_Info
  - name: Promotion_to_Staging
    steps:
      - name: scan
        type: XrayScan
        configuration:
          priority: 1
          failOnScan: true
          inputResources:
            - name: promoted_test_Build_Info
              trigger: false
      - name: Promotion_to_Staging
        type: PromoteBuild
        configuration:
          priority: 2
          targetRepository: acme-docker-staging-local
          status: Staging
          inputSteps:
            - name: scan
          inputResources:
            - name: promoted_test_Build_Info
              trigger: false
          outputResources:
            - name: promoted_stag_Build_Info
  - name: Promotion_to_Production
    steps:
      - name: scan
        type: XrayScan
        configuration:
          priority: 1
          failOnScan: true
          inputResources:
            - name: promoted_stag_Build_Info
              trigger: false
      - name: Promotion_to_Production
        type: PromoteBuild
        configuration:
          priority: 2
          targetRepository: adme-docker-prod-local
          status: Production
          inputSteps:
            - name: scan
          inputResources:
            - name: promoted_stag_Build_Info
              trigger: false
          outputResources:
            - name: promoted_prod_Build_Info